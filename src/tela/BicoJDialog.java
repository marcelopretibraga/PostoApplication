/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import postoapplication.DAO.BicoDAO;
import postoapplication.DAO.TanqueDAO;
import postoapplication.model.Bico;
import postoapplication.model.Tanque;

/**
 *
 * @author fag
 */
public class BicoJDialog extends javax.swing.JDialog {

    private BicoDAO bicoDAO;
    private TanqueDAO tanqueDAO;

    /**
     * Creates new form BicoJDialog
     */
    public BicoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        bicoDAO = new BicoDAO();
        tanqueDAO = new TanqueDAO();
        try {
            carregaTable(bicoDAO.getAll());
        } catch (SQLException ex) {
            Logger.getLogger(CombustivelJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        btSalvar.setEnabled(false);
        tfCodigo.setEnabled(false);
        desabilitaCampos(false);
        habilitaFiltroCodigo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGroupFiltros = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        tfDescricao = new javax.swing.JTextField();
        cbTanque = new javax.swing.JComboBox<>();
        btNovo = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        rbCodigo = new javax.swing.JRadioButton();
        rbDescricao = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        tfCodigoFiltro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfDescricaoFiltro = new javax.swing.JTextField();
        btFiltrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBico = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Código");

        jLabel2.setText("Descrição");

        jLabel3.setText("Tanque");

        tfCodigo.setEnabled(false);

        tfDescricao.setEnabled(false);

        cbTanque.setEnabled(false);

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        btGroupFiltros.add(rbCodigo);
        rbCodigo.setSelected(true);
        rbCodigo.setText("Código");
        rbCodigo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbCodigoStateChanged(evt);
            }
        });

        btGroupFiltros.add(rbDescricao);
        rbDescricao.setText("Descrição");
        rbDescricao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbDescricaoStateChanged(evt);
            }
        });

        jLabel4.setText("Código");

        jLabel5.setText("Descrição");

        btFiltrar.setText("Filtrar");
        btFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiltrarActionPerformed(evt);
            }
        });

        tbBico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código Bico", "Descrição Bico", "Código Tanque", "Descrição Tanque", "Capacidade Tanque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbBico);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfCodigo)
                                .addComponent(tfDescricao)
                                .addComponent(cbTanque, 0, 150, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rbCodigo)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCodigoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDescricaoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rbDescricao)))
                .addContainerGap(44, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbTanque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNovo)
                    .addComponent(btSalvar)
                    .addComponent(btRemover))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbCodigo)
                    .addComponent(jLabel4)
                    .addComponent(tfCodigoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tfDescricaoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFiltrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        try {
            if (tanqueDAO.getAll().size() != 0) {
                tfCodigo.setText(String.valueOf(bicoDAO.getLastId()));
                carregaComboTanque();
                desabilitaCampos(true);
                btSalvar.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Impossivel cadastrar Bico sem Tanques Cadastrados");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btNovoActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        Bico bico = new Bico();
        bico.setCodigo(Integer.parseInt(tfCodigo.getText()));
        bico.setDescricao(tfDescricao.getText());
        bico.setTanque((Tanque) cbTanque.getSelectedItem());
        try {
            bicoDAO.save(bico);
            JOptionPane.showMessageDialog(null, "Registro Salvo Com Sucesso!!!");
            limparCampos();
            desabilitaCampos(false);
            carregaTable(bicoDAO.getAll());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        remover();
    }//GEN-LAST:event_btRemoverActionPerformed

    private void btFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiltrarActionPerformed
        try {
            if (bicoDAO.getAll() == null) {
                if (rbCodigo.isSelected() && tfCodigoFiltro.getText().trim().length() > 0) {//Codigo está selecionado
                    Bico bico = bicoDAO.getById(Integer.parseInt(tfCodigoFiltro.getText()));
                    List<Bico> bicoList = new ArrayList<>();
                    bicoList.add(bico);
                    carregaTable(bicoList);
                } else if (rbDescricao.isSelected() && tfDescricaoFiltro.getText().trim().length() > 0) {
                    carregaTable(bicoDAO.getByName(tfDescricaoFiltro.getText()));
                } else {
                    JOptionPane.showMessageDialog(null, "Favor Informe um filtro para Pesquisa...");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Lista Vazia, Impossível Filtrar");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btFiltrarActionPerformed

    private void rbCodigoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbCodigoStateChanged
        habilitaFiltroCodigo();
    }//GEN-LAST:event_rbCodigoStateChanged

    private void rbDescricaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbDescricaoStateChanged
        tfCodigoFiltro.setText("");
        tfCodigoFiltro.setEnabled(false);
        tfDescricaoFiltro.setEnabled(true);
    }//GEN-LAST:event_rbDescricaoStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BicoJDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BicoJDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BicoJDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BicoJDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BicoJDialog dialog = new BicoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFiltrar;
    private javax.swing.ButtonGroup btGroupFiltros;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbTanque;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbCodigo;
    private javax.swing.JRadioButton rbDescricao;
    private javax.swing.JTable tbBico;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfCodigoFiltro;
    private javax.swing.JTextField tfDescricao;
    private javax.swing.JTextField tfDescricaoFiltro;
    // End of variables declaration//GEN-END:variables

    private void habilitaFiltroCodigo() {
        tfDescricaoFiltro.setText("");
        tfDescricaoFiltro.setEnabled(false);
        tfCodigoFiltro.setEnabled(true);
    }

    private void desabilitaCampos(boolean ativo) {
        tfDescricao.setEnabled(ativo);
        cbTanque.setEnabled(ativo);
    }

    private void carregaTable(List<Bico> bicoList) {
        if (bicoList == null) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbBico.getModel();
        model.setRowCount(0);
        for (Bico c : bicoList) {
            model.addRow(new Object[]{c.getCodigo(), c.getDescricao(), c.getTanque()});
        }
    }

    private void carregaComboTanque() {
        try {
            DefaultComboBoxModel modeloComboTanque;
            modeloComboTanque = new DefaultComboBoxModel(tanqueDAO.getAll().toArray());
            cbTanque.setModel(modeloComboTanque);
        } catch (SQLException ex) {
            Logger.getLogger(BicoJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limparCampos() {
        tfCodigo.setText("");
        tfDescricao.setText("");
        cbTanque.setSelectedIndex(0);
    }

    private void remover() {
        int linhaSeleciona = tbBico.getSelectedRow();
        if (linhaSeleciona == -1) {//Nenhuma Linha foi Selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha para Remover");
            return;
        }
        int codigoRemover = (int) tbBico.getValueAt(linhaSeleciona, 0);
        try {
            bicoDAO.delete(codigoRemover);
            carregaTable(bicoDAO.getAll());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}
